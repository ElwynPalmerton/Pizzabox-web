jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build

  test:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput=./test_coverage/ -l trx -o 'test_results'

  analyze:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install -g dotnet-sonarscanner
      - run: dotnet sonarscanner begin -k:"ElwynPalmerton_pizzabox-web" -o:"elwynpalmerton"  -d:sonar.login="${{secrets.SONAR_TOKEN}}" -d:sonar.host.url="https://sonarcloud.io"
      - run: dotnet build
      - run: dotnet sonarscanner end -d:sonar.login="${{secrets.SONAR_TOKEN}}"

  package:
    needs:
      - build
      - test
    env:
      DOCKER_TOKEN: ${{secrets.DOCKER_TOKEN}}
      DOCKER_USER: ${{secrets.DOCKER_USER}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker image build -f Dockerfile -t pizzabox .
      - run: docker image tag pizzabox elwynpalmerton/pizzabox
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker push elwynpalmerton/pizzabox
      - run: docker logout

  deploy:
    needs:
      - package
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: pizzabox-webapp
          images: elwynpalmerton/pizzabox

name: ci-pipeline

on: push
